SingleChildScrollView(
      physics: ScrollPhysics(),
      child: Column(
        children: <Widget>[
          ListView.builder(
            physics: NeverScrollableScrollPhysics(),
            shrinkWrap: true,
            itemCount: 3,
            itemBuilder: (context, index) {
              PostItemModel posts = PostHelper.getPost(index);
              return Container(
                padding: const EdgeInsets.only(
                  left: 10,
                  right: 10,
                  top: 5,
                  bottom: 5,
                ),
                child: Card(
                  elevation: 15,
                  margin: EdgeInsets.all(5),
                  shadowColor: Color(0xff03989E),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(15.0),
                  ),
                  clipBehavior: Clip.antiAlias,
                  child: Column(
                    children: [
                      ListTile(
                        leading: ElevatedButton(
                          onPressed: () {},
                          child: Icon(Icons.portrait, color: Colors.white),
                          style: ElevatedButton.styleFrom(
                            shape: CircleBorder(),
                            padding: EdgeInsets.all(10),
                            primary: Color(0xff03989E), // <-- Button color
                            onPrimary: Colors.red, // <-- Splash color
                          ),
                        ),
                        title: Text(
                          posts.title,
                          style: TextStyle(
                              fontSize: 18.5, fontWeight: FontWeight.bold),
                        ),
                        subtitle: Text(
                          posts.author,
                          style: TextStyle(
                              color: Colors.black.withOpacity(0.6),
                              fontStyle: FontStyle.italic),
                        ),
                      ),
                      ClipRRect(
                        borderRadius: BorderRadius.circular(12.0),
                        child: Image.asset(
                          posts.image,
                        ),
                      ),
                      Padding(
                        padding: const EdgeInsets.only(top: 4.0, bottom: 4.0),
                        child: ExpansionTile(
                          title: Text(
                            posts.toString(),
                            maxLines: 1,
                            style: TextStyle(
                              fontSize: 15,
                              color: Color(0xff03989E),
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          leading: Text(
                            posts.date,
                            style: TextStyle(
                              color: Colors.grey,
                              fontSize: 12,
                            ),
                          ),
                          children: <Widget>[
                            Container(
                              alignment: Alignment.center,
                              padding: const EdgeInsets.only(bottom: 5),
                              margin: const EdgeInsets.all(10),
                              child: Text(posts.content),
                            ),
                          ],
                        ),
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        children: <Widget>[
                          IconButton(
                            padding: const EdgeInsets.only(bottom: 12),
                            onPressed: () {},
                            icon: Icon(FontAwesomeIcons.comment),
                            color: Colors.grey,
                          ),
                          IconButton(
                            padding: const EdgeInsets.only(bottom: 12),
                            onPressed: () {},
                            icon: Icon(
                              FontAwesomeIcons.retweet,
                              color: Colors.grey,
                            ),
                          ),
                          IconButton(
                            padding: const EdgeInsets.only(bottom: 12),
                            onPressed: () {},
                            icon: Icon(
                              FontAwesomeIcons.plusSquare,
                              color: Colors.grey,
                            ),
                          ),
                          Container(
                            padding: const EdgeInsets.only(bottom: 12),
                            child: FavoriteButton(
                              iconSize: 50,
                              iconColor: Colors.red,
                              valueChanged: (_isFavorite) {
                                print('Is Favorite $_isFavorite)');
                              },
                            ),
                          )
                        ],
                      ),
                    ],
                  ),
                ),
              );
            },
          )
        ],
      ),
    );


     trailing: IconButton(
                          onPressed: () {/* Your code */},
                          icon: Icon(Icons.expand_more),
                          iconSize: 35,
                        ),


                        StreamBuilder<QuerySnapshot>(
        stream: posts,
        builder: (BuildContext context, AsyncSnapshot snapshot) {
          if (snapshot.hasError) {
            return Text("Il y a eu une erreur");
          }
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Text('En chargement');
          }
          final data = snapshot.requireData;
          return ListView.builder(
            itemCount: data.size,
            itemBuilder: (context, index) {
              return Text(
                'My name ${data.docs[index]['auteur']} is ${data.docs[index]['content']}',
                style: TextStyle(color: Colors.black),
              );
            },
          );
        },
      ),






      CommentPage


      SingleChildScrollView(
      child: Column(
        children: messages.map((message) {
          return InkWell(
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => HomeScreen(),
                ),
              );
            },
            splashColor: greenMajor,
            child: Container(
              padding: EdgeInsets.only(
                left: 20,
                right: 10,
                top: 15,
                bottom: 5,
              ),
              child: Row(
                children: [
                  Container(
                    width: 70,
                    height: 70,
                    margin: EdgeInsets.only(right: 25),
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      image: DecorationImage(
                        fit: BoxFit.cover,
                        image: AssetImage('images/pokemon.png'),
                      ),
                    ),
                  ),
                  Expanded(
                    child: Column(
                      children: [
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(
                                  message['senderName'],
                                  style: TextStyle(
                                    color: Colors.grey,
                                    fontSize: 15,
                                    fontWeight: FontWeight.w800,
                                  ),
                                ),
                                Wrap(
                                  children: [
                                    Text(
                                      message['message'],
                                      style: TextStyle(
                                        fontSize: 15,
                                        fontWeight: FontWeight.w500,
                                      ),
                                    ),
                                  ],
                                )
                              ],
                            ),
                            Column(
                              children: [
                                Text(
                                  message['date'],
                                ),
                                message['unRead'] != 0
                                    ? Container(
                                        padding: EdgeInsets.all(8),
                                        decoration: BoxDecoration(
                                          color: greenMajor,
                                          shape: BoxShape.circle,
                                        ),
                                        child: Text(
                                          message['unRead'].toString(),
                                          style: TextStyle(
                                            fontSize: 12,
                                            color: Colors.white,
                                            fontWeight: FontWeight.w500,
                                          ),
                                        ),
                                      )
                                    : Container()
                              ],
                            )
                          ],
                        ),
                        SizedBox(height: 20),
                        Container(
                          height: 0.5,
                          color: Colors.grey,
                        )
                      ],
                    ),
                  ),
                ],
              ),
            ),
          );
        }).toList(),
      ),
    );



    INk favoriteSection


    Ink(
                                  child: InkWell(
                                    child: Container(
                                      
                                      width: 75,
                                      height: 70,
                                      decoration: BoxDecoration(
                                        color: boxColor,
                                        shape: BoxShape.circle,
                                        boxShadow: [
                                          BoxShadow(
                                            color: Colors.black38,
                                            spreadRadius: 1,
                                            blurRadius: 6,
                                            offset: Offset(0,
                                                1), // changes position of shadow
                                          ),
                                        ],
                                      ),
                                      padding: const EdgeInsets.all(4),
                                      child: IconButton(
                                        onPressed: () {
                                          boxColor = greenMajor;
                                        },
                                        icon: Image.asset('images/pokemon.png'),
                                      ),
                                    ),
                                  ),
                                );

    PADDING favoriteSection 


    Padding(
                              padding: EdgeInsets.only(top: 5),
                              child: ListView.builder(
                                itemCount: data.size,
                                itemBuilder: (BuildContext context, int i) {
                                  return Text(
                                    '${data.docs[i]['categorie']}',
                                    style: TextStyle(
                                      fontSize: 15,
                                      color: Colors.white,
                                      fontWeight: FontWeight.w600,
                                    ),
                                  );
                                },
                              ),
                            )


