SingleChildScrollView(
      physics: ScrollPhysics(),
      child: Column(
        children: <Widget>[
          ListView.builder(
            physics: NeverScrollableScrollPhysics(),
            shrinkWrap: true,
            itemCount: 3,
            itemBuilder: (context, index) {
              PostItemModel posts = PostHelper.getPost(index);
              return Container(
                padding: const EdgeInsets.only(
                  left: 10,
                  right: 10,
                  top: 5,
                  bottom: 5,
                ),
                child: Card(
                  elevation: 15,
                  margin: EdgeInsets.all(5),
                  shadowColor: Color(0xff03989E),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(15.0),
                  ),
                  clipBehavior: Clip.antiAlias,
                  child: Column(
                    children: [
                      ListTile(
                        leading: ElevatedButton(
                          onPressed: () {},
                          child: Icon(Icons.portrait, color: Colors.white),
                          style: ElevatedButton.styleFrom(
                            shape: CircleBorder(),
                            padding: EdgeInsets.all(10),
                            primary: Color(0xff03989E), // <-- Button color
                            onPrimary: Colors.red, // <-- Splash color
                          ),
                        ),
                        title: Text(
                          posts.title,
                          style: TextStyle(
                              fontSize: 18.5, fontWeight: FontWeight.bold),
                        ),
                        subtitle: Text(
                          posts.author,
                          style: TextStyle(
                              color: Colors.black.withOpacity(0.6),
                              fontStyle: FontStyle.italic),
                        ),
                      ),
                      ClipRRect(
                        borderRadius: BorderRadius.circular(12.0),
                        child: Image.asset(
                          posts.image,
                        ),
                      ),
                      Padding(
                        padding: const EdgeInsets.only(top: 4.0, bottom: 4.0),
                        child: ExpansionTile(
                          title: Text(
                            posts.toString(),
                            maxLines: 1,
                            style: TextStyle(
                              fontSize: 15,
                              color: Color(0xff03989E),
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          leading: Text(
                            posts.date,
                            style: TextStyle(
                              color: Colors.grey,
                              fontSize: 12,
                            ),
                          ),
                          children: <Widget>[
                            Container(
                              alignment: Alignment.center,
                              padding: const EdgeInsets.only(bottom: 5),
                              margin: const EdgeInsets.all(10),
                              child: Text(posts.content),
                            ),
                          ],
                        ),
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        children: <Widget>[
                          IconButton(
                            padding: const EdgeInsets.only(bottom: 12),
                            onPressed: () {},
                            icon: Icon(FontAwesomeIcons.comment),
                            color: Colors.grey,
                          ),
                          IconButton(
                            padding: const EdgeInsets.only(bottom: 12),
                            onPressed: () {},
                            icon: Icon(
                              FontAwesomeIcons.retweet,
                              color: Colors.grey,
                            ),
                          ),
                          IconButton(
                            padding: const EdgeInsets.only(bottom: 12),
                            onPressed: () {},
                            icon: Icon(
                              FontAwesomeIcons.plusSquare,
                              color: Colors.grey,
                            ),
                          ),
                          Container(
                            padding: const EdgeInsets.only(bottom: 12),
                            child: FavoriteButton(
                              iconSize: 50,
                              iconColor: Colors.red,
                              valueChanged: (_isFavorite) {
                                print('Is Favorite $_isFavorite)');
                              },
                            ),
                          )
                        ],
                      ),
                    ],
                  ),
                ),
              );
            },
          )
        ],
      ),
    );


     trailing: IconButton(
                          onPressed: () {/* Your code */},
                          icon: Icon(Icons.expand_more),
                          iconSize: 35,
                        ),


                        StreamBuilder<QuerySnapshot>(
        stream: posts,
        builder: (BuildContext context, AsyncSnapshot snapshot) {
          if (snapshot.hasError) {
            return Text("Il y a eu une erreur");
          }
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Text('En chargement');
          }
          final data = snapshot.requireData;
          return ListView.builder(
            itemCount: data.size,
            itemBuilder: (context, index) {
              return Text(
                'My name ${data.docs[index]['auteur']} is ${data.docs[index]['content']}',
                style: TextStyle(color: Colors.black),
              );
            },
          );
        },
      ),